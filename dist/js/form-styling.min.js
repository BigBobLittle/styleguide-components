angular.module("tw.form-styling", []);
!function(a){"use strict";function b(){return{restrict:"C",link:d}}function c(){return{restrict:"A",link:d}}function d(a,b){var c=$(b).closest(".form-group");$(b).on("focus",function(){c.addClass("focus")}).on("blur",function(){c.removeClass("focus")})}a.module("tw.form-styling").directive("formControl",b),a.module("tw.form-styling").directive("twFocusable",c)}(window.angular),function(a){function b(){function a(){$(this).closest(".form-group").addClass("focus"),$(this).closest(g).addClass("focus")}function b(){$(this).closest(".form-group").removeClass("focus"),$(this).closest(g).removeClass("focus")}function c(a){d(this),a.stopPropagation()}function d(a){var b=$(a).closest("label").find("input");"undefined"!=typeof b[0]&&(MouseEvent?b[0].dispatchEvent(new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0})):b.click())}function e(a){13===(a.keyCode?a.keyCode:a.which)&&d(this)}function f(d,f,k,l){if(k.type){var m=k.type.toLowerCase();if(("radio"===m||"checkbox"===m)&&0!==$(f).closest(g).length){var n;n="radio"===m?$(i):$(h),n.keypress(e).click(c).focus(a).blur(b),$(f).addClass("sr-only").after(n),n.after(j)}}}var g=".checkbox > label, .radio > label",h="<button type='button' class='input-replacement'><span class='glyphicon glyphicon-ok'></span></button>",i="<button type='button' class='input-replacement'><span></span></button>",j="<span class='disabled-replacement input-replacement'><span></span></span>";return{restrict:"EA",link:f}}a.module("tw.form-styling").directive("twInput",b)}(window.angular),function(a){"use strict";function b(){return{require:"ngModel",bindToController:!0,controller:function(){},controllerAs:"$ctrl",link:c,replace:!1,transclude:!0,restrict:"EA",scope:{ngModel:"=",ngRequired:"=",ngDisabled:"=",ngChange:"&",ngBlur:"&",options:"=",name:"@",disabled:"@",required:"@",placeholder:"@"},template:" 				<div class='btn-group btn-block tw-select' aria-hidden='true'> 					<button type='button' class='btn btn-input dropdown-toggle' 						data-toggle='dropdown' aria-expanded='false' 						ng-disabled='$ctrl.ngDisabled' 						tw-focusable> 						<span class='tw-select-selected' ng-if='$ctrl.ngModel != null'> 							<i class='icon {{$ctrl.selected.icon}}' ng-if='$ctrl.selected && $ctrl.selected.icon'> 							</i><i class='currency-flag currency-flag-{{$ctrl.selected.currency | lowercase}}' ng-if='$ctrl.selected && $ctrl.selected.currency'> 							</i><span class='selected-label'>{{$ctrl.selected.label}}</span> 						</span> 						<span class='form-control-placeholder' ng-if='$ctrl.ngModel == null'>{{$ctrl.placeholder}}</span> 						<span class='caret'></span> 					</button> 					<ul class='dropdown-menu' role='menu'> 						<li ng-class='{active: !$ctrl.ngModel}' 							ng-if='$ctrl.placeholder && !$ctrl.ngRequired'> 							<a href='' value='' class='tw-select-placeholder' tw-focusable> 								{{$ctrl.placeholder}} 							</a> 						</li> 						<li ng-if='$ctrl.placeholder && !$ctrl.ngRequired' class='divider'></li> 						<li 							ng-repeat='option in $ctrl.options' 							ng-class='{active: $ctrl.ngModel === option.value}'> 							<a href='' value='{{option.value}}' class='tw-select-option' tw-focusable> 								<i class='icon {{option.icon}}' ng-if='option.icon'> 								</i><i class='currency-flag currency-flag-{{option.currency | lowercase}}' ng-if='option.currency'> 								</i>{{option.label}} 							</a> 						</li> 						<li ng-if='$ctrl.hasTranscluded' class='divider'></li> 						<li ng-transclude ng-if='$ctrl.hasTranscluded' class='tw-select-transcluded'></li> 					</ul> 				</div> 				<input type='hidden' class='tw-select-hidden' 					name='{{$ctrl.name}}' 					value='{{$ctrl.ngModel}}' 					ng-disabled='$ctrl.ngDisabled' /> "}}function c(a,b,c,g,i){var j=a.$ctrl,l=a.$ctrl.options;e(g,j,l),h(g,j,b,c),i(function(a){(a.length>1||""!==a.text().trim())&&(j.hasTranscluded=!0)}),b.find(".btn, .dropdown-menu").on("focusout",function(){setTimeout(function(){0!==b.find(".btn:focus").length||b.find(".btn-group").hasClass("open")||b.trigger("blur")},150)}),b.on("blur",function(a){g.$setTouched()}),b.find(".btn").on("keypress",function(a){k(g,j,l,a.key),b.find(".active a").focus()}),a.$watch("$ctrl.ngModel",function(a,b){(a||b)&&a!==b&&g.$setDirty(),f(a,b,j)}),b.find(".btn").on("click",function(){setTimeout(function(){b.find(".active a").focus()})}),b.find("ul").on("click","a",function(a){b.find(".btn").focus()}),b.find("ul").on("focus","a",function(a){d(a,l,g,j,this)}),b.find("ul").on("keypress","a",function(a){k(g,j,l,a.key),b.find(".active a").focus()})}function d(a,b,c,d,e){if($(a.target).hasClass("tw-select-option")){var f=g(b,e.getAttribute("value"));i(c,d,f)}else $(a.target).hasClass("tw-select-placeholder")&&j(c,d)}function e(a,b,c){if(b.ngModel){var d=g(c,b.ngModel);i(a,b,d)}}function f(a,b,c){if(a!==b){var d=g(c.options,a);d?c.selected=d:c.selected=null}}function g(a,b){var c=!1;return a.forEach(function(a){String(a.value)===String(b)&&(c=a)}),c}function h(a,b,c,d){(b.ngRequired||d.required)&&!b.ngModel&&b.options[0]&&i(a,b,b.options[0])}function i(a,b,c){a.$setViewValue(c.value),b.selected=c}function j(a,b){a.$setViewValue(null),b.selected=!1}function k(a,b,c,d){var e=l(a,b,c,b.search+d);return e?b.search+=d:(b.search=d,e=l(a,b,c,b.search)),e}function l(a,b,c,d){var e=!1,f=d.toLowerCase();return c.forEach(function(c){e||0===c.label.toLowerCase().indexOf(f)&&(i(a,b,c),e=!0)}),e}a.module("tw.form-components").directive("twSelect",b)}(window.angular);