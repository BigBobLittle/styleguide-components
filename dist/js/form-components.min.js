angular.module("tw.form-components", []);
!function(a){"use strict";function b(a,b,c){function d(){if(B.ngModel)g(),C=!0;else{if(B.modelType){if(B.modelType!==F&&B.modelType!==G)throw new Error("Invalid modelType, should be "+F+" or "+G);B.dateModelType=B.modelType}else B.dateModelType=G;B.day=null,B.month="0",B.year=null}A=a.controller("ngModel"),A.$validators.min=function(a){var b=e(B.ngMin,B.min),c=f(a);return!b||!c||c>=b},A.$validators.max=function(a){var b=e(B.ngMax,B.max),c=f(a);return!b||!c||b>=c},i(),j(),k(),h(),p()}function e(a,b){var c=a?a:b?b:!1;return c?(c="string"==typeof c?new Date(c):c,n(c)?c:!1):!1}function f(a){return"string"==typeof a?new Date(a):a}function g(){if(!m(B.ngModel))throw new Error("date model passed should either be instance of Date or valid ISO8601 string");B.dateModelType="string"==typeof B.ngModel?F:G,B.explodeDateModel(B.ngModel)}function h(){B.dateMonths=q()}function i(){B.dateRequired=void 0!==B.ngRequired?B.ngRequired:void 0!==B.required}function j(){B.dateDisabled=void 0!==B.ngDisabled?B.ngDisabled:void 0!==B.disabled}function k(){B.locale||(B.locale=D)}function l(a){var b="string"==typeof a?new Date(a):a;B.day=b.getDate(),B.month=b.getMonth(),B.year=b.getFullYear()}function m(a){return n(a)||o(a)}function n(a){return"[object Date]"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())}function o(a){return"string"==typeof a&&n(new Date(a))}function p(){c.$watch("vm.day",function(a,b){a!==b&&C&&A.$setDirty()}),c.$watch("vm.month",function(a,b){a!==b&&(B.adjustLastDay(),A.$setTouched(),C&&A.$setDirty())}),c.$watch("vm.year",function(a,b){a!==b&&C&&A.$setDirty()}),c.$watch("vm.ngModel",function(a,b){a!==b&&m(B.ngModel)&&(A.$setDirty(),B.explodeDateModel(B.ngModel))}),c.$watch("vm.ngRequired",function(a,b){a!==b&&i()}),c.$watch("vm.ngDisabled",function(a,b){a!==b&&j()}),c.$watch("vm.locale",function(a,b){a!==b&&(k(),h())})}function q(){var a;return r(B.locale)?a=s():(b.warn('i18n not supported for locale "'+B.locale+'"'),a=E),t(a)}function r(a){return window.Intl&&"object"==typeof window.Intl&&window.Intl.DateTimeFormat.supportedLocalesOf([a]).length>0}function s(){for(var a,b=[],c=0;12>c;c++){a=new Date,a.setMonth(c);var d=a.toLocaleDateString(B.locale,{month:"long"});d=d[0].toUpperCase()+d.substring(1),b.push(d)}return b}function t(a){return a.map(function(a,b){return{value:b,label:a}})}function u(){return v(B.year)&&v(B.day)&&(v(B.month)||w(B.month))}function v(a){return"number"==typeof a}function w(a){return"string"==typeof a&&!isNaN(Number(B.month))}function x(){var a=new Date(Date.UTC(Number(B.year),Number(B.month),Number(B.day)));return a.setFullYear(B.year),a}function y(){if(B.adjustLastDay(),!u())return void A.$setViewValue(null);var a=x();if(B.dateModelType===F){var b=a.toISOString(),c=b.substring(0,b.indexOf("T"));A.$setViewValue(c)}else A.$setViewValue(a)}function z(){var a=Number(B.day),b=Number(B.month),c=Number(B.year),d=new Date(Date.UTC(c,b+1,0)),e=d.getUTCDate();a>e&&(B.day=parseInt(e))}var A,B=this,C=!1;B.updateDateModelAndValidationClasses=y,B.explodeDateModel=l,B.combineDate=x,B.adjustLastDay=z,B.validDate=m;var D="en",E=["January","February","March","April","May","June","July","August","September","October","November","December"],F="string",G="object";d()}a.module("tw.form-components").controller("TwDateController",b),b.$inject=["$element","$log","$scope"]}(window.angular),function(a){"use strict";function b(){var a={require:"ngModel",bindToController:!0,controller:"TwDateController",controllerAs:"vm",replace:!1,restrict:"E",scope:{ngModel:"=",required:"@",ngRequired:"=",disabled:"@",ngDisabled:"=",locale:"@",twLocale:"=",min:"@",ngMin:"=",max:"@",ngMax:"=",modelType:"@"},template:d,link:c};return a}function c(a,b,c,d){var e,f;b.find("input[name=day]").on("blur",function(){e=!0,e&&f&&(d.$setTouched(),b.trigger("blur"))}),b.find("input[name=year]").on("blur",function(){f=!0,d.$setTouched(),b.trigger("blur")})}a.module("tw.form-components").directive("twDate",b);var d=" 			<div class='row'> 				<div class='col-sm-3'> 					<label class='sr-only' for='day-{{::uniqueId}}'>Day</label> 					<input type='number' 						name='day' 						id='day-{{::uniqueId}}' 						class='form-control tw-date-day' 						ng-model='vm.day' 						ng-change='vm.updateDateModelAndValidationClasses()' 						placeholder='DD' 						min='1' 						ng-min='1' 						ng-disabled='vm.dateDisabled' 						ng-required='vm.dateRequired' 						tw-focusable /> 				</div> 				<div class='col-sm-5'> 					<label class='sr-only' for='month-{{::uniqueId}}'>Month</label> 					<tw-select 						name='month' 						class='tw-date-month' 						id='month-{{::uniqueId}}' 						ng-model='vm.month' 						ng-change='vm.updateDateModelAndValidationClasses()' 						ng-required='vm.dateRequired' 						ng-disabled='vm.dateDisabled' 						options='vm.dateMonths'> 					</tw-select> 				</div> 				<div class='col-sm-4'> 					<label class='sr-only' for='year-{{::uniqueId}}'>Year</label> 					<input type='number' 						id='year-{{::uniqueId}}' 						name='year' 						class='form-control tw-date-year' 						placeholder='YYYY' 						ng-model='vm.year' 						ng-change='vm.updateDateModelAndValidationClasses()' 						ng-min='vm.dateRange.min.getFullYear()' 						ng-max='vm.dateRange.max.getFullYear()' 						maxlength='4' 						ng-maxlength='4' 						ng-disabled='vm.dateDisabled' 						ng-required='vm.dateRequired' 						tw-focusable /> 				</div> 			</div>"}(window.angular),function(a){function b(){return{restrict:"E",require:"ngModel",transclude:!0,controllerAs:"$ctrl",bindToController:!0,controller:"TwDynamicFormControlController",link:d,scope:{type:"@",name:"@",id:"@",placeholder:"@",step:"@",options:"=",ngModel:"=",ngRequired:"=",ngDisabled:"=",ngMinlength:"=",ngMaxlength:"=",ngMin:"=",ngMax:"=",ngPattern:"="},template:"<div ng-switch='$ctrl.type'> 				<input ng-switch-when='text'  					name='{{$ctrl.name}}'  					id='{{$ctrl.id}}' 					type='text' 					class='form-control' 					placeholder='{{$ctrl.placeholder}}' 					ng-model='$ctrl.ngModel' 					ng-model-options='{ allowInvalid: true }' 					ng-required='$ctrl.ngRequired' 					ng-disabled='$ctrl.ngDisabled' 					ng-pattern='$ctrl.ngPattern' 					ng-change='$ctrl.change()' 					ng-blur='$ctrl.blur()' 					ng-minlength='$ctrl.ngMinlength' 					ng-maxlength='$ctrl.ngMaxlength' />  				<input ng-switch-when='number'  					name='{{$ctrl.name}}'  					id='{{$ctrl.id}}' 					type='number' 					step='{{$ctrl.step}}' 					class='form-control' 					placeholder='{{$ctrl.placeholder}}' 					ng-model='$ctrl.ngModel' 					ng-model-options='{ allowInvalid: true }' 					ng-required='$ctrl.ngRequired' 					ng-disabled='$ctrl.ngDisabled' 					ng-change='$ctrl.change()' 					ng-blur='$ctrl.blur()' 					ng-min='$ctrl.ngMin' 					ng-max='$ctrl.ngMax' />  				<div ng-switch-when='radio' 					class='radio' 					ng-class='{disabled: $ctrl.ngDisabled}' 					ng-repeat='option in $ctrl.options'> 					<label> 						<input type='radio' tw-input 							name='{{$ctrl.name}}' 							value='{{option.value}}' 							ng-model='$ctrl.ngModel' 							ng-required='$ctrl.ngRequired' 							ng-disabled='$ctrl.ngDisabled' 							ng-change='$ctrl.change()' 							ng-click='$ctrl.change()' 							ng-blur='$ctrl.blur()' /> 						{{option.label}} 					</label> 				</div> 				<div ng-switch-when='checkbox' 					class='checkbox' 					ng-class='{disabled: $ctrl.ngDisabled}'> 					<label> 						<input type='checkbox' tw-input 							name='{{$ctrl.name}}' 							id='{{$ctrl.id}}' 							ng-model='$ctrl.ngModel' 							ng-required='$ctrl.ngRequired' 							ng-disabled='$ctrl.ngDisabled' 							ng-change='$ctrl.change()' 							ng-click='$ctrl.change()' 							ng-blur='$ctrl.blur()' /> 						{{$ctrl.placeholder}} 					</label> 				</div> 				<select ng-switch-when='select' 					name='{{$ctrl.name}}' 					id='{{$ctrl.id}}' 					class='form-control tw-dynamic-select' 					ng-options='option.value as option.label for option in $ctrl.options' 					ng-model='$ctrl.ngModel' 					ng-required='$ctrl.ngRequired' 					ng-disabled='$ctrl.ngDisabled' 					ng-change='$ctrl.change(); $ctrl.blur();'> 					ng-blur='$ctrl.blur()'> 					<option ng-if='$ctrl.placeholder' value=''> 						{{$ctrl.placeholder}} 					</option> 				</select> 				<ng-transclude class='error-messages'></ng-transclude> 			</div>"}}function c(a,b){var c=this,d=a.controller("ngModel");c.change=function(){d.$setDirty()},c.blur=function(){d.$setTouched(),a.trigger("blur")}}function d(a,b,c,d){d.$validators.min=function(b,c){return"undefined"==typeof a.$ctrl.ngMin?!0:!("number"==typeof c&&"number"==typeof a.$ctrl.ngMin&&c<a.$ctrl.ngMin)},d.$validators.max=function(b,c){return"undefined"==typeof a.$ctrl.ngMax?!0:!("number"==typeof c&&"number"==typeof a.$ctrl.ngMax&&c>a.$ctrl.ngMax)}}a.module("tw.form-components").directive("twDynamicFormControl",b),a.module("tw.form-components").controller("TwDynamicFormControlController",c),c.$inject=["$element","$scope"]}(window.angular),function(a){function b(){return{restrict:"E",template:"<div class='loader'> 			  <div class='loader-spinner'></div> 			  <div class='loader-flag'> 			    <svg xmlns='http://www.w3.org/2000/svg' width='52' height='52' viewBox='-2 -2 56 56'> 			      <polygon class='loader-flag-stroke'  stroke='#00B9FF' stroke-width='2' stroke-linejoin='miter' stroke-linecap='round' stroke-miterlimit='10' stroke-dasharray='300' stroke-dashoffset='300' fill='none' points='24.6,27.3 0,27.3 14.3,13.7 6.1,0 48.2,0 26.3,52 19.5,52 39.2,5.5 16.8,5.5 21.6,13.6 13.4,21.8 27,21.8' /> 			    </svg> 			    <svg class='loader-flag-fill' xmlns='http://www.w3.org/2000/svg' width='52' height='52' viewBox='0 2 52 48'> 			      <polygon fill='#00B9FF' points='6.1,0 14.3,13.7 0,27.3 24.6,27.3 27,21.8 13.4,21.8 21.6,13.6 16.8,5.5 39.2,5.5 19.5,52 26.3,52 48.2,0 '/> 			    </svg> 			  </div> 			</div>"}}a.module("tw.form-components").directive("twLoader",b)}(window.angular);