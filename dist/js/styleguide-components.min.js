angular.module("tw.form-validation", []);
angular.module("tw.form-styling", []);
angular.module("tw.form-components", []);
angular.module("tw.styleguide-components", ['tw.form-validation', 'tw.form-styling', 'tw.form-components']);
!function(a){"use strict";function b(a,b,c){function d(){if(A.ngModel)e(),B=!0;else{if(A.modelType){if(A.modelType!==E&&A.modelType!==F)throw new Error("Invalid modelType, should be "+E+" or "+F);A.dateModelType=A.modelType}else A.dateModelType=F;A.day=null,A.month=0,A.year=null}z=a.controller("ngModel"),z.$validators.min=function(a){if(null===a)return!0;var b=A.ngMin?A.ngMin:A.min;b="string"==typeof b?Date.parse(b)?new Date(b):!1:b;var c="string"==typeof a?new Date(a):a;return!b||c>=b},z.$validators.max=function(a){if(null===a)return!0;var b=A.ngMax?A.ngMax:A.max;b="string"==typeof b?Date.parse(b)?new Date(b):!1:b;var c="string"==typeof a?new Date(a):a;return!b||b>=c},g(),h(),i(),f(),o()}function e(){if(!l(A.ngModel))throw new Error("date model passed should either be instance of Date or valid ISO8601 string");A.dateModelType="string"==typeof A.ngModel?E:F,A.explodeDateModel(A.ngModel)}function f(){A.dateMonths=p()}function g(){A.dateRequired=void 0!==A.ngRequired?A.ngRequired:void 0!==A.required}function h(){A.dateDisabled=void 0!==A.ngDisabled?A.ngDisabled:void 0!==A.disabled}function i(){A.locale&&(A.dateLocale=A.locale),A.twLocale&&(A.dateLocale=A.twLocale),A.dateLocale||j()}function j(){A.dateLocale=C}function k(a){var b="string"==typeof a?new Date(a):a;A.day=b.getDate(),A.month=b.getMonth(),A.year=b.getFullYear()}function l(a){return m(a)||n(a)}function m(a){return"[object Date]"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())}function n(a){return"string"==typeof a&&m(new Date(a))}function o(){c.$watch("vm.day",function(a,b){a!==b&&B&&z.$setDirty()}),c.$watch("vm.month",function(a,b){a!==b&&(A.adjustLastDay(),z.$setTouched(),B&&z.$setDirty())}),c.$watch("vm.year",function(a,b){a!==b&&B&&z.$setDirty()}),c.$watch("vm.ngModel",function(a,b){a!==b&&l(A.ngModel)&&(z.$setDirty(),A.explodeDateModel(A.ngModel))}),c.$watch("vm.ngRequired",function(a,b){a!==b&&g()}),c.$watch("vm.ngDisabled",function(a,b){a!==b&&h()}),c.$watch("vm.twLocale",function(a,b){a!==b&&(i(),f())})}function p(){var a;return q(A.dateLocale)?a=r():(b.warn('i18n not supported for locale "'+A.dateLocale+'"'),a=D),s(a)}function q(a){return window.Intl&&"object"==typeof window.Intl&&window.Intl.DateTimeFormat.supportedLocalesOf([a]).length>0}function r(){for(var a,b=[],c=0;12>c;c++){a=new Date,a.setMonth(c);var d=a.toLocaleDateString(A.dateLocale,{month:"long"});d=d[0].toUpperCase()+d.substring(1),b.push(d)}return b}function s(a){return a.map(function(a,b){return{value:b,label:a}})}function t(){return u(A.year)&&u(A.day)&&(u(A.month)||v(A.month))}function u(a){return"number"==typeof a}function v(a){return"string"==typeof a&&!isNaN(Number(A.month))}function w(){var a=new Date(Date.UTC(Number(A.year),Number(A.month),Number(A.day)));return a.setFullYear(A.year),a}function x(){if(A.adjustLastDay(),!t())return void z.$setViewValue(null);var a=w();if(A.dateModelType===E){var b=a.toISOString(),c=b.substring(0,b.indexOf("T"));z.$setViewValue(c)}else z.$setViewValue(a)}function y(){var a=Number(A.day),b=Number(A.month),c=Number(A.year),d=new Date(Date.UTC(c,b+1,0)),e=d.getUTCDate();a>e&&(A.day=parseInt(e))}var z,A=this,B=!1;A.updateDateModelAndValidationClasses=x,A.explodeDateModel=k,A.combineDate=w,A.adjustLastDay=y,A.validDate=l;var C="en",D=["January","February","March","April","May","June","July","August","September","October","November","December"],E="string",F="object";d()}a.module("tw.form-components").controller("TwDateController",b),b.$inject=["$element","$log","$scope"]}(window.angular),function(a){"use strict";function b(){var a={require:"ngModel",bindToController:!0,controller:"TwDateController",controllerAs:"vm",replace:!1,restrict:"E",scope:{ngModel:"=",required:"@",ngRequired:"=",disabled:"@",ngDisabled:"=",locale:"@",twLocale:"=",min:"@",ngMin:"=",max:"@",ngMax:"=",modelType:"@"},template:d,link:c};return a}function c(a,b,c,d){b.find("input").on("blur",function(){d.$setTouched()})}a.module("tw.form-components").directive("twDate",b);var d=" 			<div class='row'> 				<div class='col-sm-3'> 					<label class='sr-only' for='day-{{::uniqueId}}'>Day</label> 					<input type='number' 						name='day' 						id='day-{{::uniqueId}}' 						class='form-control tw-date-day' 						ng-model='vm.day' 						ng-change='vm.updateDateModelAndValidationClasses()' 						placeholder='DD' 						min='1' 						ng-min='1' 						ng-disabled='vm.dateDisabled' 						ng-required='vm.dateRequired' 						tw-focusable /> 				</div> 				<div class='col-sm-5'> 					<label class='sr-only' for='month-{{::uniqueId}}'>Month</label> 					<select name='month' 						id='month-{{::uniqueId}}' 						class='form-control tw-date-month' 						ng-model='vm.month' 						ng-change='vm.updateDateModelAndValidationClasses()' 						ng-options='month.value as month.label for month in vm.dateMonths' 						ng-disabled='vm.dateDisabled' 						ng-required='vm.dateRequired' 						autocomplete='off'> 					</select> 				</div> 				<div class='col-sm-4'> 					<label class='sr-only' for='year-{{::uniqueId}}'>Year</label> 					<input type='number' 						id='year-{{::uniqueId}}' 						name='year' 						class='form-control tw-date-year' 						placeholder='YYYY' 						ng-model='vm.year' 						ng-change='vm.updateDateModelAndValidationClasses()' 						ng-min='vm.dateRange.min.getFullYear()' 						ng-max='vm.dateRange.max.getFullYear()' 						maxlength='4' 						ng-maxlength='4' 						ng-disabled='vm.dateDisabled' 						ng-required='vm.dateRequired' 						tw-focusable /> 				</div> 			</div>"}(window.angular),function(a){function b(){return{restrict:"E",require:"ngModel",transclude:!0,controllerAs:"$ctrl",bindToController:!0,controller:"TwDynamicFormControlController",link:d,scope:{type:"@",name:"@",id:"@",placeholder:"@",step:"@",options:"=",ngModel:"=",ngRequired:"=",ngDisabled:"=",ngMinlength:"=",ngMaxlength:"=",ngMin:"=",ngMax:"=",ngPattern:"="},template:"<div ng-switch='$ctrl.type'> 				<input ng-switch-when='text'  					name='{{$ctrl.name}}'  					id='{{$ctrl.id}}' 					type='text' 					class='form-control' 					placeholder='{{$ctrl.placeholder}}' 					ng-model='$ctrl.ngModel' 					ng-model-options='{ allowInvalid: true }' 					ng-required='$ctrl.ngRequired' 					ng-disabled='$ctrl.ngDisabled' 					ng-pattern='$ctrl.ngPattern' 					ng-change='$ctrl.change()' 					ng-blur='$ctrl.blur()' 					ng-minlength='$ctrl.ngMinlength' 					ng-maxlength='$ctrl.ngMaxlength' />  				<input ng-switch-when='number'  					name='{{$ctrl.name}}'  					id='{{$ctrl.id}}' 					type='number' 					step='{{$ctrl.step}}' 					class='form-control' 					placeholder='{{$ctrl.placeholder}}' 					ng-model='$ctrl.ngModel' 					ng-model-options='{ allowInvalid: true }' 					ng-required='$ctrl.ngRequired' 					ng-disabled='$ctrl.ngDisabled' 					ng-change='$ctrl.change()' 					ng-blur='$ctrl.blur()' 					ng-min='$ctrl.ngMin' 					ng-max='$ctrl.ngMax' />  				<div ng-switch-when='radio' 					class='radio' 					ng-class='{disabled: $ctrl.ngDisabled}' 					ng-repeat='option in $ctrl.options'> 					<label> 						<input type='radio' tw-input 							name='{{$ctrl.name}}' 							value='{{option.value}}' 							ng-model='$ctrl.ngModel' 							ng-required='$ctrl.ngRequired' 							ng-disabled='$ctrl.ngDisabled' 							ng-change='$ctrl.change()' 							ng-click='$ctrl.change()' 							ng-blur='$ctrl.blur()' /> 						{{option.label}} 					</label> 				</div> 				<div ng-switch-when='checkbox' 					class='checkbox' 					ng-class='{disabled: $ctrl.ngDisabled}'> 					<label> 						<input type='checkbox' tw-input 							name='{{$ctrl.name}}' 							id='{{$ctrl.id}}' 							ng-model='$ctrl.ngModel' 							ng-required='$ctrl.ngRequired' 							ng-disabled='$ctrl.ngDisabled' 							ng-change='$ctrl.change()' 							ng-click='$ctrl.change()' 							ng-blur='$ctrl.blur()' /> 						{{$ctrl.placeholder}} 					</label> 				</div> 				<select ng-switch-when='select' 					name='{{$ctrl.name}}' 					id='{{$ctrl.id}}' 					class='form-control' 					ng-options='option.value as option.label for option in $ctrl.options' 					ng-model='$ctrl.ngModel' 					ng-required='$ctrl.ngRequired' 					ng-disabled='$ctrl.ngDisabled' 					ng-change='$ctrl.change(); $ctrl.blur();'> 					ng-blur='$ctrl.blur()'> 					<option ng-if='$ctrl.placeholder' value=''> 						{{$ctrl.placeholder}} 					</option> 				</select> 				<ng-transclude class='error-messages'></ng-transclude> 			</div>"}}function c(a,b){var c=this,d=a.controller("ngModel");c.change=function(){d.$setDirty()},c.blur=function(){d.$setTouched()}}function d(a,b,c,d){d.$validators.min=function(b,c){return"undefined"==typeof a.$ctrl.ngMin?!0:!("number"==typeof c&&"number"==typeof a.$ctrl.ngMin&&c<a.$ctrl.ngMin)},d.$validators.max=function(b,c){return"undefined"==typeof a.$ctrl.ngMax?!0:!("number"==typeof c&&"number"==typeof a.$ctrl.ngMax&&c>a.$ctrl.ngMax)}}a.module("tw.form-components").directive("twDynamicFormControl",b),a.module("tw.form-components").controller("TwDynamicFormControlController",c),c.$inject=["$element","$scope"]}(window.angular),function(a){function b(){return{restrict:"E",template:"<div class='loader'> 			  <div class='loader-spinner'></div> 			  <div class='loader-flag'> 			    <svg xmlns='http://www.w3.org/2000/svg' width='52' height='52' viewBox='-2 -2 56 56'> 			      <polygon class='loader-flag-stroke'  stroke='#00B9FF' stroke-width='2' stroke-linejoin='miter' stroke-linecap='round' stroke-miterlimit='10' stroke-dasharray='300' stroke-dashoffset='300' fill='none' points='24.6,27.3 0,27.3 14.3,13.7 6.1,0 48.2,0 26.3,52 19.5,52 39.2,5.5 16.8,5.5 21.6,13.6 13.4,21.8 27,21.8' /> 			    </svg> 			    <svg class='loader-flag-fill' xmlns='http://www.w3.org/2000/svg' width='52' height='52' viewBox='0 2 52 48'> 			      <polygon fill='#00B9FF' points='6.1,0 14.3,13.7 0,27.3 24.6,27.3 27,21.8 13.4,21.8 21.6,13.6 16.8,5.5 39.2,5.5 19.5,52 26.3,52 48.2,0 '/> 			    </svg> 			  </div> 			</div>"}}a.module("tw.form-components").directive("twLoader",b)}(window.angular),function(a){"use strict";function b(){var a={bindToController:!0,link:c,controller:e,controllerAs:"vm",require:"ngModel",restrict:"E",scope:{ngModel:"=",required:"@",ngRequired:"=",disabled:"@",ngDisabled:"=",ngMin:"=",ngMax:"="},template:f};return a}function c(a,b,c,e){b.find(".first, .second").on("change keypress",function(){a.$evalAsync(function(){e.$setDirty(),d(a,e)})}),b.find(".first, .second").on("blur",function(){a.$evalAsync(e.$setTouched())}),e.$validators.min=function(b,c){return a.vm.ngMin&&c>=a.vm.ngMin},e.$validators.max=function(b,c){return a.vm.ngMax&&c<=a.vm.ngMax}}function d(a,b){var c=a.vm.first&&a.vm.second?a.vm.first+a.vm.second:null;b.$setViewValue(c)}function e(){}a.module("tw.form-components").directive("twModelUsage",b);var f=" 	<div class='row'> 		<div class='col-xs-6'> 			<input type='number' 				ng-model='vm.first' 				name='first' 				class='first form-control' /> 		</div> 		<div class='col-xs-6'> 			<input type='number' 				ng-model='vm.second' 				name='second' 				class='second form-control' /> 		</div> 	</div>"}(window.angular),function(a){"use strict";function b(){return{restrict:"C",link:d}}function c(){return{restrict:"A",link:d}}function d(a,b){var c=$(b).closest(".form-group");$(b).on("focus",function(){c.addClass("focus")}).on("blur",function(){c.removeClass("focus")})}a.module("tw.form-styling").directive("formControl",b),a.module("tw.form-styling").directive("twFocusable",c)}(window.angular),function(a){function b(){function a(){$(this).closest(".form-group").addClass("focus"),$(this).closest(g).addClass("focus")}function b(){$(this).closest(".form-group").removeClass("focus"),$(this).closest(g).removeClass("focus")}function c(a){d(this),a.stopPropagation()}function d(a){var b=$(a).closest("label").find("input");"undefined"!=typeof b[0]&&(MouseEvent?b[0].dispatchEvent(new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0})):b.click())}function e(a){13===(a.keyCode?a.keyCode:a.which)&&d(this)}function f(d,f,k,l){if(k.type){var m=k.type.toLowerCase();if(("radio"===m||"checkbox"===m)&&0!==$(f).closest(g).length){var n;n="radio"===m?$(i):$(h),n.keypress(e).click(c).focus(a).blur(b),$(f).addClass("sr-only").after(n),n.after(j)}}}var g=".checkbox > label, .radio > label",h="<button type='button' class='input-replacement'><span class='glyphicon glyphicon-ok'></span></button>",i="<button type='button' class='input-replacement'><span></span></button>",j="<span class='disabled-replacement input-replacement'><span></span></span>";return{restrict:"EA",link:f}}a.module("tw.form-styling").directive("twInput",b)}(window.angular),function(a){"use strict";function b(){return{require:"ngModel",bindToController:!0,controller:function(){},controllerAs:"$ctrl",link:c,replace:!1,restrict:"EA",scope:{ngModel:"=",ngRequired:"=",ngDisabled:"=",ngChange:"&",ngBlur:"&",options:"=",name:"@",disabled:"@",required:"@",placeholder:"@"},template:" 				<div class='btn-group btn-block'> 					<button type='button' class='btn btn-input dropdown-toggle' 						data-toggle='dropdown' aria-expanded='false' 						ng-disabled='$ctrl.ngDisabled' 						tw-focusable> 						<i class='icon {{$ctrl.selected.icon}}' ng-if='$ctrl.selected && $ctrl.selected.icon'> 						</i><span class='selected' ng-if='$ctrl.ngModel'>{{$ctrl.selected.label}}</span> 						<span class='form-control-placeholder' ng-if='!$ctrl.ngModel'>{{$ctrl.placeholder}}</span> 						<span class='caret'></span> 					</button> 					<ul class='dropdown-menu' role='menu'> 						<li ng-class='{active: !$ctrl.ngModel}' 							ng-if='$ctrl.placeholder && !$ctrl.ngRequired'> 							<a href='' value='' tw-focusable> 								{{$ctrl.placeholder}} 							</a> 						</li> 						<li 							ng-repeat='option in $ctrl.options' 							ng-class='{active: $ctrl.ngModel === option.value}'> 							<a href='' value='{{option.value}}' class='tw-select-option' tw-focusable> 								<i class='icon {{option.icon}}' ng-if='option.icon'></i>{{option.label}} 							</a> 						</li> 					</ul> 					<input type='hidden' name='{{$ctrl.name}}' value='{{$ctrl.ngModel}}' 					 	ng-disabled='$ctrl.ngDisabled' /> 				</div>"}}function c(a,b,c,l){var m=a.$ctrl,n=a.$ctrl.options;d(l,m,n),g(l,m,b,c),b.find(".btn").on("keypress click",function(a){l.$setTouched()}),b.find(".btn").on("keypress",function(a){j(l,m,b,n,a.key),b.find(".active a").focus()}),a.$watch("$ctrl.ngModel",function(a,b){a!==b&&l.$setDirty(),e(a,b,m)}),b.find(".btn").on("click",function(){setTimeout(function(){b.find(".active a").focus()})}),b.find(".btn").on("blur",function(){a.$evalAsync(function(){b.find(".btn-group").hasClass("open")||k(l,b,m)},100)}),b.find("ul").on("click","a",function(a){if($(a.target).hasClass("tw-select-option")){var c=f(n,this.getAttribute("value"));h(l,m,c)}else i(l,m);b.find(".btn").focus()}),b.find("ul").on("focus","a",function(a){if($(a.target).hasClass("tw-select-option")){var b=f(n,this.getAttribute("value"));h(l,m,b)}else i(l,m)}),b.find("ul").on("blur","a",function(c){a.$evalAsync(function(){0!==b.find(".btn:focus").length||b.find(".btn-group").hasClass("open")||k(l,b,m)},100)}),b.find("ul").on("keypress","a",function(a){j(l,m,b,n,a.key),b.find(".active a").focus()})}function d(a,b,c){if(b.ngModel){var d=f(c,b.ngModel);h(a,b,d)}}function e(a,b,c){if(a!==b){var d=f(c.options,a);d?c.selected=d:c.selected=null}}function f(a,b){var c=!1;return a.forEach(function(a){String(a.value)===String(b)&&(c=a)}),c}function g(a,b,c,d){(b.ngRequired||d.required)&&!b.ngModel&&b.options[0]&&h(a,b,b.options[0])}function h(a,b,c){a.$setViewValue(c.value),b.selected=c}function i(a,b){a.$setViewValue(""),b.selected=!1}function j(a,b,c,d,e){var f=e?e.toLowerCase():"",g=!1;d.forEach(function(c){g||c.label.substring(0,1).toLowerCase()===f&&(g=!0,h(a,b,c))})}function k(a,b,c){c.ngBlur()}a.module("tw.form-components").directive("twSelect",b)}(window.angular),function(a){"use strict";function b(){return{restrict:"E",link:function(a,b){$(b).on("submit",function(){$(b).find("[tw-validation].ng-invalid").closest(".form-group").addClass("has-error");var a=$(b).find("input[type=checkbox].ng-invalid, input[type=radio].ng-invalid");return a.closest(".checkbox, .radio").addClass("has-error"),a.parents(".form-group").addClass("has-error"),!0})}}}a.module("tw.form-validation").directive("form",b)}(window.angular),function(a){function b(){function a(a,c,d){setTimeout(function(){a.hasClass("ng-invalid")?(c.addClass("has-error"),d.addClass("has-error")):(c.removeClass("has-error"),b(d))})}function b(a){var b=a.find("input.ng-invalid"),c=a.find("input.ng-valid").closest(".checkbox, .radio");setTimeout(function(){c.removeClass("has-error"),0===b.length&&a.removeClass("has-error")})}function c(b,c,e,f){if(e.type){var g=e.type.toLowerCase();if(("radio"===g||"checkbox"===g)&&0!==$(c).closest(d).length){var h=$(c),i=h.closest("label");i.on("click",function(){a(h,h.closest(".checkbox, .radio"),h.closest(".form-group"))})}}}var d=".checkbox > label, .radio > label";return{restrict:"E",link:c}}a.module("tw.form-validation").directive("input",b)}(window.angular),function(a){"use strict";function b(){return{restrict:"AC",require:"ngModel",link:c}}function c(a,b,c,e){var f=b.closest(".form-group");b.on("invalid",function(a){a.preventDefault()}),e.$validators.validation=function(){return a.$evalAsync(function(){d(e,f,b)}),!0},b.on("blur",function(){a.$evalAsync(function(){d(e,f,b)})})}function d(a,b,c){return a.$valid?(b.removeClass("has-error"),void c.removeAttr("aria-invalid")):void(a.$touched&&a.$dirty&&(b.addClass("has-error"),c.attr("aria-invalid",!0)))}a.module("tw.form-validation").directive("twValidation",b)}(window.angular);